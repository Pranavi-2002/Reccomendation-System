{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPWj/RcXiBopTZPbXZpGyHc",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Pranavi-2002/Reccomendation-System/blob/main/Internship\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "1SV6ZMMprDm8"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "YgerTGPyq2_t"
      },
      "outputs": [],
      "source": [
        "df1=pd.read_csv(\"/content/links.csv\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2=pd.read_csv(\"/content/tags.csv\")"
      ],
      "metadata": {
        "id": "k8HOymoPrF8k"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "m4UggpW2vYtH",
        "outputId": "b601d983-5bd2-4fb2-99fd-f7af3a4c4d1b"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      userId  movieId               tag   timestamp\n",
              "0          2    60756             funny  1445714994\n",
              "1          2    60756   Highly quotable  1445714996\n",
              "2          2    60756      will ferrell  1445714992\n",
              "3          2    89774      Boxing story  1445715207\n",
              "4          2    89774               MMA  1445715200\n",
              "...      ...      ...               ...         ...\n",
              "3678     606     7382         for katie  1171234019\n",
              "3679     606     7936           austere  1173392334\n",
              "3680     610     3265            gun fu  1493843984\n",
              "3681     610     3265  heroic bloodshed  1493843978\n",
              "3682     610   168248  Heroic Bloodshed  1493844270\n",
              "\n",
              "[3683 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ca1f218f-df6e-4009-a9f2-034d92b7b90f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userId</th>\n",
              "      <th>movieId</th>\n",
              "      <th>tag</th>\n",
              "      <th>timestamp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>60756</td>\n",
              "      <td>funny</td>\n",
              "      <td>1445714994</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>60756</td>\n",
              "      <td>Highly quotable</td>\n",
              "      <td>1445714996</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>60756</td>\n",
              "      <td>will ferrell</td>\n",
              "      <td>1445714992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>89774</td>\n",
              "      <td>Boxing story</td>\n",
              "      <td>1445715207</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "      <td>89774</td>\n",
              "      <td>MMA</td>\n",
              "      <td>1445715200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3678</th>\n",
              "      <td>606</td>\n",
              "      <td>7382</td>\n",
              "      <td>for katie</td>\n",
              "      <td>1171234019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3679</th>\n",
              "      <td>606</td>\n",
              "      <td>7936</td>\n",
              "      <td>austere</td>\n",
              "      <td>1173392334</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3680</th>\n",
              "      <td>610</td>\n",
              "      <td>3265</td>\n",
              "      <td>gun fu</td>\n",
              "      <td>1493843984</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3681</th>\n",
              "      <td>610</td>\n",
              "      <td>3265</td>\n",
              "      <td>heroic bloodshed</td>\n",
              "      <td>1493843978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3682</th>\n",
              "      <td>610</td>\n",
              "      <td>168248</td>\n",
              "      <td>Heroic Bloodshed</td>\n",
              "      <td>1493844270</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3683 rows Ã— 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca1f218f-df6e-4009-a9f2-034d92b7b90f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ca1f218f-df6e-4009-a9f2-034d92b7b90f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ca1f218f-df6e-4009-a9f2-034d92b7b90f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-20418c16-90d4-4d66-a9df-007c23f25cb9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-20418c16-90d4-4d66-a9df-007c23f25cb9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-20418c16-90d4-4d66-a9df-007c23f25cb9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_4f5e5f0c-3180-4ddb-9d75-728e62ede1ac\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df2')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_4f5e5f0c-3180-4ddb-9d75-728e62ede1ac button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df2');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df3=pd.read_csv(\"/content/movies.csv\")"
      ],
      "metadata": {
        "id": "9aA2yED0rF6d"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "pF0m8SZrsFxd",
        "outputId": "7f30dab0-51a3-4994-b398-4b370c4afc7d"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      movieId                                      title  \\\n",
              "0           1                           Toy Story (1995)   \n",
              "1           2                             Jumanji (1995)   \n",
              "2           3                    Grumpier Old Men (1995)   \n",
              "3           4                   Waiting to Exhale (1995)   \n",
              "4           5         Father of the Bride Part II (1995)   \n",
              "...       ...                                        ...   \n",
              "9737   193581  Black Butler: Book of the Atlantic (2017)   \n",
              "9738   193583               No Game No Life: Zero (2017)   \n",
              "9739   193585                               Flint (2017)   \n",
              "9740   193587        Bungo Stray Dogs: Dead Apple (2018)   \n",
              "9741   193609        Andrew Dice Clay: Dice Rules (1991)   \n",
              "\n",
              "                                           genres  \n",
              "0     Adventure|Animation|Children|Comedy|Fantasy  \n",
              "1                      Adventure|Children|Fantasy  \n",
              "2                                  Comedy|Romance  \n",
              "3                            Comedy|Drama|Romance  \n",
              "4                                          Comedy  \n",
              "...                                           ...  \n",
              "9737              Action|Animation|Comedy|Fantasy  \n",
              "9738                     Animation|Comedy|Fantasy  \n",
              "9739                                        Drama  \n",
              "9740                             Action|Animation  \n",
              "9741                                       Comedy  \n",
              "\n",
              "[9742 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9dd8dc01-b009-4db4-a705-29ad0617cce9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>movieId</th>\n",
              "      <th>title</th>\n",
              "      <th>genres</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Toy Story (1995)</td>\n",
              "      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Jumanji (1995)</td>\n",
              "      <td>Adventure|Children|Fantasy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Grumpier Old Men (1995)</td>\n",
              "      <td>Comedy|Romance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Waiting to Exhale (1995)</td>\n",
              "      <td>Comedy|Drama|Romance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Father of the Bride Part II (1995)</td>\n",
              "      <td>Comedy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9737</th>\n",
              "      <td>193581</td>\n",
              "      <td>Black Butler: Book of the Atlantic (2017)</td>\n",
              "      <td>Action|Animation|Comedy|Fantasy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9738</th>\n",
              "      <td>193583</td>\n",
              "      <td>No Game No Life: Zero (2017)</td>\n",
              "      <td>Animation|Comedy|Fantasy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9739</th>\n",
              "      <td>193585</td>\n",
              "      <td>Flint (2017)</td>\n",
              "      <td>Drama</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9740</th>\n",
              "      <td>193587</td>\n",
              "      <td>Bungo Stray Dogs: Dead Apple (2018)</td>\n",
              "      <td>Action|Animation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9741</th>\n",
              "      <td>193609</td>\n",
              "      <td>Andrew Dice Clay: Dice Rules (1991)</td>\n",
              "      <td>Comedy</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9742 rows Ã— 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9dd8dc01-b009-4db4-a705-29ad0617cce9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9dd8dc01-b009-4db4-a705-29ad0617cce9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9dd8dc01-b009-4db4-a705-29ad0617cce9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-81992805-6aea-4249-9dce-f5cd9e1a2c66\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81992805-6aea-4249-9dce-f5cd9e1a2c66')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-81992805-6aea-4249-9dce-f5cd9e1a2c66 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_d2c533f8-a7f4-42c7-8c2a-faf7e57a4bb2\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df3')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_d2c533f8-a7f4-42c7-8c2a-faf7e57a4bb2 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df3');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df3.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AMBvdXsdrnXK",
        "outputId": "f6631dc4-b4c2-4d42-cdd0-db6b5ca7c728"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(9742, 3)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df4=pd.read_csv(\"/content/ratings.csv\")"
      ],
      "metadata": {
        "id": "y2Wd1g3hrF4Y"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df4.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0DVnlN1XrpSu",
        "outputId": "4ef72f11-acda-4647-b468-393b4e8d570c"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(100836, 4)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "1MfVcntcsGpR",
        "outputId": "8ed520fc-daea-4c18-bec2-e31a211fc76e"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        userId  movieId  rating   timestamp\n",
              "0            1        1     4.0   964982703\n",
              "1            1        3     4.0   964981247\n",
              "2            1        6     4.0   964982224\n",
              "3            1       47     5.0   964983815\n",
              "4            1       50     5.0   964982931\n",
              "...        ...      ...     ...         ...\n",
              "100831     610   166534     4.0  1493848402\n",
              "100832     610   168248     5.0  1493850091\n",
              "100833     610   168250     5.0  1494273047\n",
              "100834     610   168252     5.0  1493846352\n",
              "100835     610   170875     3.0  1493846415\n",
              "\n",
              "[100836 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8b868294-adbc-4693-84e6-8d1d707d0ee9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userId</th>\n",
              "      <th>movieId</th>\n",
              "      <th>rating</th>\n",
              "      <th>timestamp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>964982703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>964981247</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>4.0</td>\n",
              "      <td>964982224</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>47</td>\n",
              "      <td>5.0</td>\n",
              "      <td>964983815</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>50</td>\n",
              "      <td>5.0</td>\n",
              "      <td>964982931</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100831</th>\n",
              "      <td>610</td>\n",
              "      <td>166534</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1493848402</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100832</th>\n",
              "      <td>610</td>\n",
              "      <td>168248</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1493850091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100833</th>\n",
              "      <td>610</td>\n",
              "      <td>168250</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1494273047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100834</th>\n",
              "      <td>610</td>\n",
              "      <td>168252</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1493846352</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100835</th>\n",
              "      <td>610</td>\n",
              "      <td>170875</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1493846415</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100836 rows Ã— 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b868294-adbc-4693-84e6-8d1d707d0ee9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8b868294-adbc-4693-84e6-8d1d707d0ee9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8b868294-adbc-4693-84e6-8d1d707d0ee9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-44733e0a-93ab-4809-b17a-5e1c6f66528a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44733e0a-93ab-4809-b17a-5e1c6f66528a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-44733e0a-93ab-4809-b17a-5e1c6f66528a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_d5a747b5-1b03-44ac-a2a6-ffa593a30631\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df4')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_d5a747b5-1b03-44ac-a2a6-ffa593a30631 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df4');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df4.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zb0GBFC_r4zp",
        "outputId": "9133d881-2a7a-493b-b1c4-01d7b872b077"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['userId', 'movieId', 'rating', 'timestamp'], dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df4['userId'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xH1C8jzvrF1_",
        "outputId": "d4c8bc0a-fac0-4f6b-c8a8-d359f7e27377"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([  1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,\n",
              "        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,\n",
              "        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,\n",
              "        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,\n",
              "        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,\n",
              "        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,\n",
              "        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,\n",
              "        92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104,\n",
              "       105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117,\n",
              "       118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,\n",
              "       131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,\n",
              "       144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,\n",
              "       157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,\n",
              "       170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182,\n",
              "       183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,\n",
              "       196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208,\n",
              "       209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221,\n",
              "       222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234,\n",
              "       235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,\n",
              "       248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260,\n",
              "       261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273,\n",
              "       274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286,\n",
              "       287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299,\n",
              "       300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312,\n",
              "       313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325,\n",
              "       326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338,\n",
              "       339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351,\n",
              "       352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364,\n",
              "       365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377,\n",
              "       378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390,\n",
              "       391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403,\n",
              "       404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416,\n",
              "       417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429,\n",
              "       430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442,\n",
              "       443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455,\n",
              "       456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468,\n",
              "       469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481,\n",
              "       482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494,\n",
              "       495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507,\n",
              "       508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520,\n",
              "       521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533,\n",
              "       534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546,\n",
              "       547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559,\n",
              "       560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572,\n",
              "       573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585,\n",
              "       586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598,\n",
              "       599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610])"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df3.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "xt5Yns8hsOHV",
        "outputId": "635dc1d8-34b3-4a09-d289-1f682215f98a"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   movieId                               title  \\\n",
              "0        1                    Toy Story (1995)   \n",
              "1        2                      Jumanji (1995)   \n",
              "2        3             Grumpier Old Men (1995)   \n",
              "3        4            Waiting to Exhale (1995)   \n",
              "4        5  Father of the Bride Part II (1995)   \n",
              "\n",
              "                                        genres  \n",
              "0  Adventure|Animation|Children|Comedy|Fantasy  \n",
              "1                   Adventure|Children|Fantasy  \n",
              "2                               Comedy|Romance  \n",
              "3                         Comedy|Drama|Romance  \n",
              "4                                       Comedy  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c645a8e9-1e5a-42f1-b843-d07c24704b14\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>movieId</th>\n",
              "      <th>title</th>\n",
              "      <th>genres</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Toy Story (1995)</td>\n",
              "      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Jumanji (1995)</td>\n",
              "      <td>Adventure|Children|Fantasy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Grumpier Old Men (1995)</td>\n",
              "      <td>Comedy|Romance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Waiting to Exhale (1995)</td>\n",
              "      <td>Comedy|Drama|Romance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Father of the Bride Part II (1995)</td>\n",
              "      <td>Comedy</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c645a8e9-1e5a-42f1-b843-d07c24704b14')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c645a8e9-1e5a-42f1-b843-d07c24704b14 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c645a8e9-1e5a-42f1-b843-d07c24704b14');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1c4e79fa-d501-4d28-8423-ea3b75921c91\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1c4e79fa-d501-4d28-8423-ea3b75921c91')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1c4e79fa-d501-4d28-8423-ea3b75921c91 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df4.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "ZMfUDyBzsOEL",
        "outputId": "e4a9026c-6bdd-4284-8ff7-b7746b66af1c"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   userId  movieId  rating  timestamp\n",
              "0       1        1     4.0  964982703\n",
              "1       1        3     4.0  964981247\n",
              "2       1        6     4.0  964982224\n",
              "3       1       47     5.0  964983815\n",
              "4       1       50     5.0  964982931"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f03dffb3-ca8b-4869-a834-f47850a78a89\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userId</th>\n",
              "      <th>movieId</th>\n",
              "      <th>rating</th>\n",
              "      <th>timestamp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>964982703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>964981247</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>4.0</td>\n",
              "      <td>964982224</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>47</td>\n",
              "      <td>5.0</td>\n",
              "      <td>964983815</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>50</td>\n",
              "      <td>5.0</td>\n",
              "      <td>964982931</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f03dffb3-ca8b-4869-a834-f47850a78a89')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f03dffb3-ca8b-4869-a834-f47850a78a89 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f03dffb3-ca8b-4869-a834-f47850a78a89');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c6c5be0b-e491-4d69-9c00-3a75e86e47da\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c6c5be0b-e491-4d69-9c00-3a75e86e47da')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c6c5be0b-e491-4d69-9c00-3a75e86e47da button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merge_df=pd.merge(df3,df4,on='movieId')"
      ],
      "metadata": {
        "id": "0-NfLststqLS"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "merge_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "OnxCySuGvbm_",
        "outputId": "908e1e29-723e-414e-e221-be7c0bf0ff4d"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        movieId                                      title  \\\n",
              "0             1                           Toy Story (1995)   \n",
              "1             1                           Toy Story (1995)   \n",
              "2             1                           Toy Story (1995)   \n",
              "3             1                           Toy Story (1995)   \n",
              "4             1                           Toy Story (1995)   \n",
              "...         ...                                        ...   \n",
              "100831   193581  Black Butler: Book of the Atlantic (2017)   \n",
              "100832   193583               No Game No Life: Zero (2017)   \n",
              "100833   193585                               Flint (2017)   \n",
              "100834   193587        Bungo Stray Dogs: Dead Apple (2018)   \n",
              "100835   193609        Andrew Dice Clay: Dice Rules (1991)   \n",
              "\n",
              "                                             genres  userId  rating  \\\n",
              "0       Adventure|Animation|Children|Comedy|Fantasy       1     4.0   \n",
              "1       Adventure|Animation|Children|Comedy|Fantasy       5     4.0   \n",
              "2       Adventure|Animation|Children|Comedy|Fantasy       7     4.5   \n",
              "3       Adventure|Animation|Children|Comedy|Fantasy      15     2.5   \n",
              "4       Adventure|Animation|Children|Comedy|Fantasy      17     4.5   \n",
              "...                                             ...     ...     ...   \n",
              "100831              Action|Animation|Comedy|Fantasy     184     4.0   \n",
              "100832                     Animation|Comedy|Fantasy     184     3.5   \n",
              "100833                                        Drama     184     3.5   \n",
              "100834                             Action|Animation     184     3.5   \n",
              "100835                                       Comedy     331     4.0   \n",
              "\n",
              "         timestamp  \n",
              "0        964982703  \n",
              "1        847434962  \n",
              "2       1106635946  \n",
              "3       1510577970  \n",
              "4       1305696483  \n",
              "...            ...  \n",
              "100831  1537109082  \n",
              "100832  1537109545  \n",
              "100833  1537109805  \n",
              "100834  1537110021  \n",
              "100835  1537157606  \n",
              "\n",
              "[100836 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c3af00a3-06f7-44c8-bf18-4f27261d83b7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>movieId</th>\n",
              "      <th>title</th>\n",
              "      <th>genres</th>\n",
              "      <th>userId</th>\n",
              "      <th>rating</th>\n",
              "      <th>timestamp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Toy Story (1995)</td>\n",
              "      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n",
              "      <td>1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>964982703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>Toy Story (1995)</td>\n",
              "      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n",
              "      <td>5</td>\n",
              "      <td>4.0</td>\n",
              "      <td>847434962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>Toy Story (1995)</td>\n",
              "      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n",
              "      <td>7</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1106635946</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>Toy Story (1995)</td>\n",
              "      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n",
              "      <td>15</td>\n",
              "      <td>2.5</td>\n",
              "      <td>1510577970</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Toy Story (1995)</td>\n",
              "      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n",
              "      <td>17</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1305696483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100831</th>\n",
              "      <td>193581</td>\n",
              "      <td>Black Butler: Book of the Atlantic (2017)</td>\n",
              "      <td>Action|Animation|Comedy|Fantasy</td>\n",
              "      <td>184</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1537109082</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100832</th>\n",
              "      <td>193583</td>\n",
              "      <td>No Game No Life: Zero (2017)</td>\n",
              "      <td>Animation|Comedy|Fantasy</td>\n",
              "      <td>184</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1537109545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100833</th>\n",
              "      <td>193585</td>\n",
              "      <td>Flint (2017)</td>\n",
              "      <td>Drama</td>\n",
              "      <td>184</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1537109805</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100834</th>\n",
              "      <td>193587</td>\n",
              "      <td>Bungo Stray Dogs: Dead Apple (2018)</td>\n",
              "      <td>Action|Animation</td>\n",
              "      <td>184</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1537110021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100835</th>\n",
              "      <td>193609</td>\n",
              "      <td>Andrew Dice Clay: Dice Rules (1991)</td>\n",
              "      <td>Comedy</td>\n",
              "      <td>331</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1537157606</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100836 rows Ã— 6 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3af00a3-06f7-44c8-bf18-4f27261d83b7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c3af00a3-06f7-44c8-bf18-4f27261d83b7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c3af00a3-06f7-44c8-bf18-4f27261d83b7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0620f828-087c-486a-96ce-5fb4adb7d7d9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0620f828-087c-486a-96ce-5fb4adb7d7d9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0620f828-087c-486a-96ce-5fb4adb7d7d9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_43779bbe-9fd3-4746-8f31-e11e5592c575\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('merge_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_43779bbe-9fd3-4746-8f31-e11e5592c575 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('merge_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ratings_count=merge_df.groupby('title')['rating'].count()"
      ],
      "metadata": {
        "id": "xpg4f9yfuPZI"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "max_ratings_movie=ratings_count.idxmax()"
      ],
      "metadata": {
        "id": "MRLbIvQJuPXz"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "max_ratings_movie"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "lQIfD4-VuPTn",
        "outputId": "7a7d5ada-54ad-41cd-a26a-9c3f2c7103bb"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Forrest Gump (1994)'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merge_df1=pd.merge(df2,merge_df,on='userId')"
      ],
      "metadata": {
        "id": "Cp2RLKz7vGxc"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "mfdf=pd.merge(df3,df2,on='movieId',how='left')\n",
        "mt=mfdf[mfdf['title']=='Matrix, The (1999)']['tag'].tolist()\n",
        "mt"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7NHr0f_s9OMQ",
        "outputId": "c88268a8-5387-4172-de96-2414f82f0f5a"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['martial arts',\n",
              " 'sci-fi',\n",
              " 'alternate universe',\n",
              " 'philosophy',\n",
              " 'post apocalyptic']"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gr=df4.groupby('movieId')['rating'].agg(['count','mean']).reset_index()\n",
        "mdf=pd.merge(df3,gr,on='movieId',how='inner')\n",
        "fdf=mdf[mdf['count']>50]\n",
        "mpm=fdf.loc[fdf['mean'].idxmax()]\n",
        "mpm"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2x0wBUtG9OKp",
        "outputId": "2a5d3457-1b8c-42f6-c323-4e1c9f20ac0f"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "movieId                                 318\n",
              "title      Shawshank Redemption, The (1994)\n",
              "genres                          Crime|Drama\n",
              "count                                   317\n",
              "mean                               4.429022\n",
              "Name: 277, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sdf=fdf.sort_values(by='count',ascending=False)\n",
        "t5pm=sdf.head(5)\n",
        "t5pm"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "TmOHhpZt9OH3",
        "outputId": "a9c77f8e-f514-43b1-e65f-d9a6d878eb5f"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      movieId                             title                       genres  \\\n",
              "314       356               Forrest Gump (1994)     Comedy|Drama|Romance|War   \n",
              "277       318  Shawshank Redemption, The (1994)                  Crime|Drama   \n",
              "257       296               Pulp Fiction (1994)  Comedy|Crime|Drama|Thriller   \n",
              "510       593  Silence of the Lambs, The (1991)        Crime|Horror|Thriller   \n",
              "1938     2571                Matrix, The (1999)       Action|Sci-Fi|Thriller   \n",
              "\n",
              "      count      mean  \n",
              "314     329  4.164134  \n",
              "277     317  4.429022  \n",
              "257     307  4.197068  \n",
              "510     279  4.161290  \n",
              "1938    278  4.192446  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bef670aa-09a1-4aa0-b3ab-c544783beeac\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>movieId</th>\n",
              "      <th>title</th>\n",
              "      <th>genres</th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>314</th>\n",
              "      <td>356</td>\n",
              "      <td>Forrest Gump (1994)</td>\n",
              "      <td>Comedy|Drama|Romance|War</td>\n",
              "      <td>329</td>\n",
              "      <td>4.164134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>318</td>\n",
              "      <td>Shawshank Redemption, The (1994)</td>\n",
              "      <td>Crime|Drama</td>\n",
              "      <td>317</td>\n",
              "      <td>4.429022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>296</td>\n",
              "      <td>Pulp Fiction (1994)</td>\n",
              "      <td>Comedy|Crime|Drama|Thriller</td>\n",
              "      <td>307</td>\n",
              "      <td>4.197068</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>510</th>\n",
              "      <td>593</td>\n",
              "      <td>Silence of the Lambs, The (1991)</td>\n",
              "      <td>Crime|Horror|Thriller</td>\n",
              "      <td>279</td>\n",
              "      <td>4.161290</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1938</th>\n",
              "      <td>2571</td>\n",
              "      <td>Matrix, The (1999)</td>\n",
              "      <td>Action|Sci-Fi|Thriller</td>\n",
              "      <td>278</td>\n",
              "      <td>4.192446</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bef670aa-09a1-4aa0-b3ab-c544783beeac')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bef670aa-09a1-4aa0-b3ab-c544783beeac button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bef670aa-09a1-4aa0-b3ab-c544783beeac');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c7d13fab-a3e5-40c8-97bb-b57d1c4d9c95\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c7d13fab-a3e5-40c8-97bb-b57d1c4d9c95')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c7d13fab-a3e5-40c8-97bb-b57d1c4d9c95 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_b978d730-ed50-45d4-b45c-8b4b31c5b80a\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('t5pm')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_b978d730-ed50-45d4-b45c-8b4b31c5b80a button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('t5pm');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sfdf=fdf[fdf['genres'].str.contains('Sci-Fi')]\n",
        "ssfdf=sfdf.sort_values(by='count',ascending=False)\n",
        "tmpsf=ssfdf.iloc[2]\n",
        "tmpsf"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5e5o3V6_9OE0",
        "outputId": "53645304-eb2d-43fa-86e5-7cab6f46e07d"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "movieId                                 480\n",
              "title                  Jurassic Park (1993)\n",
              "genres     Action|Adventure|Sci-Fi|Thriller\n",
              "count                                   238\n",
              "mean                                   3.75\n",
              "Name: 418, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "from bs4 import BeautifulSoup\n",
        "!pip install requests fake_useragent\n",
        "from fake_useragent import UserAgent\n",
        "import pandas as pd\n",
        "import time\n",
        "\n",
        "# Load IMDb IDs from links.csv\n",
        "links_df = pd.read_csv('links.csv')\n",
        "\n",
        "# Example IMDb URL: 'https://www.imdb.com/title/tt0111161/'\n",
        "base_url = 'https://www.imdb.com/title/tt'\n",
        "\n",
        "# Create a function to scrape IMDb reviews\n",
        "def scrape_imdb_reviews(imdb_id):\n",
        "    url = f'{base_url}{imdb_id}/reviews'\n",
        "\n",
        "    # Use a fake user agent to rotate and avoid being blocked\n",
        "    headers = {'User-Agent': UserAgent().random}\n",
        "\n",
        "    # Set up a simple retry mechanism\n",
        "    retries = 3\n",
        "    for _ in range(retries):\n",
        "        try:\n",
        "            response = requests.get(url, headers=headers, timeout=10)\n",
        "            response.raise_for_status()  # Raise an exception for bad responses\n",
        "            break  # If successful, break out of the loop\n",
        "        except requests.exceptions.RequestException as e:\n",
        "            print(f\"Request failed for movie with IMDb ID {imdb_id}: {e}\")\n",
        "            time.sleep(5)  # Wait for a while before retrying\n",
        "\n",
        "    else:\n",
        "        print(f\"Failed to retrieve reviews for movie with IMDb ID {imdb_id}\")\n",
        "        return\n",
        "\n",
        "    if response.status_code == 200:\n",
        "        soup = BeautifulSoup(response.content, 'html.parser')\n",
        "\n",
        "        # Extract and process reviews as needed\n",
        "        reviews = soup.find_all('div', class_='text show-more__control')\n",
        "        for review in reviews:\n",
        "            print(review.get_text())\n",
        "    else:\n",
        "        print(f\"Failed to retrieve reviews for movie with IMDb ID {imdb_id}\")\n",
        "\n",
        "# Iterate through the IMDb IDs\n",
        "for imdb_id in links_df['imdbId']:\n",
        "    scrape_imdb_reviews(imdb_id)\n",
        "    time.sleep(5)  # Introduce a delay"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ZAyJBZraF0q3",
        "outputId": "1207a492-0990-47ad-962f-68f08767bf7e"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (2.31.0)\n",
            "Collecting fake_useragent\n",
            "  Downloading fake_useragent-1.4.0-py3-none-any.whl (15 kB)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests) (3.6)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests) (2023.11.17)\n",
            "Installing collected packages: fake_useragent\n",
            "Successfully installed fake_useragent-1.4.0\n",
            "Request failed for movie with IMDb ID 114709: 404 Client Error:  for url: https://www.imdb.com/title/tt114709/reviews\n",
            "Request failed for movie with IMDb ID 114709: 404 Client Error:  for url: https://www.imdb.com/title/tt114709/reviews\n",
            "Request failed for movie with IMDb ID 114709: 404 Client Error:  for url: https://www.imdb.com/title/tt114709/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114709\n",
            "Request failed for movie with IMDb ID 113497: 404 Client Error:  for url: https://www.imdb.com/title/tt113497/reviews\n",
            "Request failed for movie with IMDb ID 113497: 404 Client Error:  for url: https://www.imdb.com/title/tt113497/reviews\n",
            "Request failed for movie with IMDb ID 113497: 404 Client Error:  for url: https://www.imdb.com/title/tt113497/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113497\n",
            "Request failed for movie with IMDb ID 113228: 404 Client Error:  for url: https://www.imdb.com/title/tt113228/reviews\n",
            "Request failed for movie with IMDb ID 113228: 404 Client Error:  for url: https://www.imdb.com/title/tt113228/reviews\n",
            "Request failed for movie with IMDb ID 113228: 404 Client Error:  for url: https://www.imdb.com/title/tt113228/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113228\n",
            "Request failed for movie with IMDb ID 114885: 404 Client Error:  for url: https://www.imdb.com/title/tt114885/reviews\n",
            "Request failed for movie with IMDb ID 114885: 404 Client Error:  for url: https://www.imdb.com/title/tt114885/reviews\n",
            "Request failed for movie with IMDb ID 114885: 404 Client Error:  for url: https://www.imdb.com/title/tt114885/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114885\n",
            "Request failed for movie with IMDb ID 113041: 404 Client Error:  for url: https://www.imdb.com/title/tt113041/reviews\n",
            "Request failed for movie with IMDb ID 113041: 404 Client Error:  for url: https://www.imdb.com/title/tt113041/reviews\n",
            "Request failed for movie with IMDb ID 113041: 404 Client Error:  for url: https://www.imdb.com/title/tt113041/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113041\n",
            "Request failed for movie with IMDb ID 113277: 404 Client Error:  for url: https://www.imdb.com/title/tt113277/reviews\n",
            "Request failed for movie with IMDb ID 113277: 404 Client Error:  for url: https://www.imdb.com/title/tt113277/reviews\n",
            "Request failed for movie with IMDb ID 113277: 404 Client Error:  for url: https://www.imdb.com/title/tt113277/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113277\n",
            "Request failed for movie with IMDb ID 114319: 404 Client Error:  for url: https://www.imdb.com/title/tt114319/reviews\n",
            "Request failed for movie with IMDb ID 114319: 404 Client Error:  for url: https://www.imdb.com/title/tt114319/reviews\n",
            "Request failed for movie with IMDb ID 114319: 404 Client Error:  for url: https://www.imdb.com/title/tt114319/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114319\n",
            "Request failed for movie with IMDb ID 112302: 404 Client Error:  for url: https://www.imdb.com/title/tt112302/reviews\n",
            "Request failed for movie with IMDb ID 112302: 404 Client Error:  for url: https://www.imdb.com/title/tt112302/reviews\n",
            "Request failed for movie with IMDb ID 112302: 404 Client Error:  for url: https://www.imdb.com/title/tt112302/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112302\n",
            "Request failed for movie with IMDb ID 114576: 404 Client Error:  for url: https://www.imdb.com/title/tt114576/reviews\n",
            "Request failed for movie with IMDb ID 114576: 404 Client Error:  for url: https://www.imdb.com/title/tt114576/reviews\n",
            "Request failed for movie with IMDb ID 114576: 404 Client Error:  for url: https://www.imdb.com/title/tt114576/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114576\n",
            "Request failed for movie with IMDb ID 113189: 404 Client Error:  for url: https://www.imdb.com/title/tt113189/reviews\n",
            "Request failed for movie with IMDb ID 113189: 404 Client Error:  for url: https://www.imdb.com/title/tt113189/reviews\n",
            "Request failed for movie with IMDb ID 113189: 404 Client Error:  for url: https://www.imdb.com/title/tt113189/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113189\n",
            "Request failed for movie with IMDb ID 112346: 404 Client Error:  for url: https://www.imdb.com/title/tt112346/reviews\n",
            "Request failed for movie with IMDb ID 112346: 404 Client Error:  for url: https://www.imdb.com/title/tt112346/reviews\n",
            "Request failed for movie with IMDb ID 112346: 404 Client Error:  for url: https://www.imdb.com/title/tt112346/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112346\n",
            "Request failed for movie with IMDb ID 112896: 404 Client Error:  for url: https://www.imdb.com/title/tt112896/reviews\n",
            "Request failed for movie with IMDb ID 112896: 404 Client Error:  for url: https://www.imdb.com/title/tt112896/reviews\n",
            "Request failed for movie with IMDb ID 112896: 404 Client Error:  for url: https://www.imdb.com/title/tt112896/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112896\n",
            "Request failed for movie with IMDb ID 112453: 404 Client Error:  for url: https://www.imdb.com/title/tt112453/reviews\n",
            "Request failed for movie with IMDb ID 112453: 404 Client Error:  for url: https://www.imdb.com/title/tt112453/reviews\n",
            "Request failed for movie with IMDb ID 112453: 404 Client Error:  for url: https://www.imdb.com/title/tt112453/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112453\n",
            "Request failed for movie with IMDb ID 113987: 404 Client Error:  for url: https://www.imdb.com/title/tt113987/reviews\n",
            "Request failed for movie with IMDb ID 113987: 404 Client Error:  for url: https://www.imdb.com/title/tt113987/reviews\n",
            "Request failed for movie with IMDb ID 113987: 404 Client Error:  for url: https://www.imdb.com/title/tt113987/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113987\n",
            "Request failed for movie with IMDb ID 112760: 404 Client Error:  for url: https://www.imdb.com/title/tt112760/reviews\n",
            "Request failed for movie with IMDb ID 112760: 404 Client Error:  for url: https://www.imdb.com/title/tt112760/reviews\n",
            "Request failed for movie with IMDb ID 112760: 404 Client Error:  for url: https://www.imdb.com/title/tt112760/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112760\n",
            "Request failed for movie with IMDb ID 112641: 404 Client Error:  for url: https://www.imdb.com/title/tt112641/reviews\n",
            "Request failed for movie with IMDb ID 112641: 404 Client Error:  for url: https://www.imdb.com/title/tt112641/reviews\n",
            "Request failed for movie with IMDb ID 112641: 404 Client Error:  for url: https://www.imdb.com/title/tt112641/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112641\n",
            "Request failed for movie with IMDb ID 114388: 404 Client Error:  for url: https://www.imdb.com/title/tt114388/reviews\n",
            "Request failed for movie with IMDb ID 114388: 404 Client Error:  for url: https://www.imdb.com/title/tt114388/reviews\n",
            "Request failed for movie with IMDb ID 114388: 404 Client Error:  for url: https://www.imdb.com/title/tt114388/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114388\n",
            "Request failed for movie with IMDb ID 113101: 404 Client Error:  for url: https://www.imdb.com/title/tt113101/reviews\n",
            "Request failed for movie with IMDb ID 113101: 404 Client Error:  for url: https://www.imdb.com/title/tt113101/reviews\n",
            "Request failed for movie with IMDb ID 113101: 404 Client Error:  for url: https://www.imdb.com/title/tt113101/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113101\n",
            "Request failed for movie with IMDb ID 112281: 404 Client Error:  for url: https://www.imdb.com/title/tt112281/reviews\n",
            "Request failed for movie with IMDb ID 112281: 404 Client Error:  for url: https://www.imdb.com/title/tt112281/reviews\n",
            "Request failed for movie with IMDb ID 112281: 404 Client Error:  for url: https://www.imdb.com/title/tt112281/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112281\n",
            "Request failed for movie with IMDb ID 113845: 404 Client Error:  for url: https://www.imdb.com/title/tt113845/reviews\n",
            "Request failed for movie with IMDb ID 113845: 404 Client Error:  for url: https://www.imdb.com/title/tt113845/reviews\n",
            "Request failed for movie with IMDb ID 113845: 404 Client Error:  for url: https://www.imdb.com/title/tt113845/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113845\n",
            "Request failed for movie with IMDb ID 113161: 404 Client Error:  for url: https://www.imdb.com/title/tt113161/reviews\n",
            "Request failed for movie with IMDb ID 113161: 404 Client Error:  for url: https://www.imdb.com/title/tt113161/reviews\n",
            "Request failed for movie with IMDb ID 113161: 404 Client Error:  for url: https://www.imdb.com/title/tt113161/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113161\n",
            "Request failed for movie with IMDb ID 112722: 404 Client Error:  for url: https://www.imdb.com/title/tt112722/reviews\n",
            "Request failed for movie with IMDb ID 112722: 404 Client Error:  for url: https://www.imdb.com/title/tt112722/reviews\n",
            "Request failed for movie with IMDb ID 112722: 404 Client Error:  for url: https://www.imdb.com/title/tt112722/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112722\n",
            "Request failed for movie with IMDb ID 112401: 404 Client Error:  for url: https://www.imdb.com/title/tt112401/reviews\n",
            "Request failed for movie with IMDb ID 112401: 404 Client Error:  for url: https://www.imdb.com/title/tt112401/reviews\n",
            "Request failed for movie with IMDb ID 112401: 404 Client Error:  for url: https://www.imdb.com/title/tt112401/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112401\n",
            "Request failed for movie with IMDb ID 114168: 404 Client Error:  for url: https://www.imdb.com/title/tt114168/reviews\n",
            "Request failed for movie with IMDb ID 114168: 404 Client Error:  for url: https://www.imdb.com/title/tt114168/reviews\n",
            "Request failed for movie with IMDb ID 114168: 404 Client Error:  for url: https://www.imdb.com/title/tt114168/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114168\n",
            "Request failed for movie with IMDb ID 113627: 404 Client Error:  for url: https://www.imdb.com/title/tt113627/reviews\n",
            "Request failed for movie with IMDb ID 113627: 404 Client Error:  for url: https://www.imdb.com/title/tt113627/reviews\n",
            "Request failed for movie with IMDb ID 113627: 404 Client Error:  for url: https://www.imdb.com/title/tt113627/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113627\n",
            "Request failed for movie with IMDb ID 114057: 404 Client Error:  for url: https://www.imdb.com/title/tt114057/reviews\n",
            "Request failed for movie with IMDb ID 114057: 404 Client Error:  for url: https://www.imdb.com/title/tt114057/reviews\n",
            "Request failed for movie with IMDb ID 114057: 404 Client Error:  for url: https://www.imdb.com/title/tt114057/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114057\n",
            "Request failed for movie with IMDb ID 114011: 404 Client Error:  for url: https://www.imdb.com/title/tt114011/reviews\n",
            "Request failed for movie with IMDb ID 114011: 404 Client Error:  for url: https://www.imdb.com/title/tt114011/reviews\n",
            "Request failed for movie with IMDb ID 114011: 404 Client Error:  for url: https://www.imdb.com/title/tt114011/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114011\n",
            "Request failed for movie with IMDb ID 114117: 404 Client Error:  for url: https://www.imdb.com/title/tt114117/reviews\n",
            "Request failed for movie with IMDb ID 114117: 404 Client Error:  for url: https://www.imdb.com/title/tt114117/reviews\n",
            "Request failed for movie with IMDb ID 114117: 404 Client Error:  for url: https://www.imdb.com/title/tt114117/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114117\n",
            "Request failed for movie with IMDb ID 112682: 404 Client Error:  for url: https://www.imdb.com/title/tt112682/reviews\n",
            "Request failed for movie with IMDb ID 112682: 404 Client Error:  for url: https://www.imdb.com/title/tt112682/reviews\n",
            "Request failed for movie with IMDb ID 112682: 404 Client Error:  for url: https://www.imdb.com/title/tt112682/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112682\n",
            "Request failed for movie with IMDb ID 115012: 404 Client Error:  for url: https://www.imdb.com/title/tt115012/reviews\n",
            "Request failed for movie with IMDb ID 115012: 404 Client Error:  for url: https://www.imdb.com/title/tt115012/reviews\n",
            "Request failed for movie with IMDb ID 115012: 404 Client Error:  for url: https://www.imdb.com/title/tt115012/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115012\n",
            "Request failed for movie with IMDb ID 112792: 404 Client Error:  for url: https://www.imdb.com/title/tt112792/reviews\n",
            "Request failed for movie with IMDb ID 112792: 404 Client Error:  for url: https://www.imdb.com/title/tt112792/reviews\n",
            "Request failed for movie with IMDb ID 112792: 404 Client Error:  for url: https://www.imdb.com/title/tt112792/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112792\n",
            "Request failed for movie with IMDb ID 114746: 404 Client Error:  for url: https://www.imdb.com/title/tt114746/reviews\n",
            "Request failed for movie with IMDb ID 114746: 404 Client Error:  for url: https://www.imdb.com/title/tt114746/reviews\n",
            "Request failed for movie with IMDb ID 114746: 404 Client Error:  for url: https://www.imdb.com/title/tt114746/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114746\n",
            "Request failed for movie with IMDb ID 112431: 404 Client Error:  for url: https://www.imdb.com/title/tt112431/reviews\n",
            "Request failed for movie with IMDb ID 112431: 404 Client Error:  for url: https://www.imdb.com/title/tt112431/reviews\n",
            "Request failed for movie with IMDb ID 112431: HTTPSConnectionPool(host='www.imdb.com', port=443): Max retries exceeded with url: /title/tt112431/reviews (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f0e70825a80>, 'Connection to www.imdb.com timed out. (connect timeout=10)'))\n",
            "Failed to retrieve reviews for movie with IMDb ID 112431\n",
            "Request failed for movie with IMDb ID 112818: 404 Client Error:  for url: https://www.imdb.com/title/tt112818/reviews\n",
            "Request failed for movie with IMDb ID 112818: 404 Client Error:  for url: https://www.imdb.com/title/tt112818/reviews\n",
            "Request failed for movie with IMDb ID 112818: 404 Client Error:  for url: https://www.imdb.com/title/tt112818/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112818\n",
            "Request failed for movie with IMDb ID 113442: 404 Client Error:  for url: https://www.imdb.com/title/tt113442/reviews\n",
            "Request failed for movie with IMDb ID 113442: 404 Client Error:  for url: https://www.imdb.com/title/tt113442/reviews\n",
            "Request failed for movie with IMDb ID 113442: 404 Client Error:  for url: https://www.imdb.com/title/tt113442/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113442\n",
            "Request failed for movie with IMDb ID 112697: 404 Client Error:  for url: https://www.imdb.com/title/tt112697/reviews\n",
            "Request failed for movie with IMDb ID 112697: 404 Client Error:  for url: https://www.imdb.com/title/tt112697/reviews\n",
            "Request failed for movie with IMDb ID 112697: 404 Client Error:  for url: https://www.imdb.com/title/tt112697/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112697\n",
            "Request failed for movie with IMDb ID 112749: 404 Client Error:  for url: https://www.imdb.com/title/tt112749/reviews\n",
            "Request failed for movie with IMDb ID 112749: 404 Client Error:  for url: https://www.imdb.com/title/tt112749/reviews\n",
            "Request failed for movie with IMDb ID 112749: 404 Client Error:  for url: https://www.imdb.com/title/tt112749/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112749\n",
            "Request failed for movie with IMDb ID 114279: 404 Client Error:  for url: https://www.imdb.com/title/tt114279/reviews\n",
            "Request failed for movie with IMDb ID 114279: 404 Client Error:  for url: https://www.imdb.com/title/tt114279/reviews\n",
            "Request failed for movie with IMDb ID 114279: 404 Client Error:  for url: https://www.imdb.com/title/tt114279/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114279\n",
            "Request failed for movie with IMDb ID 112819: 404 Client Error:  for url: https://www.imdb.com/title/tt112819/reviews\n",
            "Request failed for movie with IMDb ID 112819: 404 Client Error:  for url: https://www.imdb.com/title/tt112819/reviews\n",
            "Request failed for movie with IMDb ID 112819: 404 Client Error:  for url: https://www.imdb.com/title/tt112819/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112819\n",
            "Request failed for movie with IMDb ID 114272: 404 Client Error:  for url: https://www.imdb.com/title/tt114272/reviews\n",
            "Request failed for movie with IMDb ID 114272: 404 Client Error:  for url: https://www.imdb.com/title/tt114272/reviews\n",
            "Request failed for movie with IMDb ID 114272: 404 Client Error:  for url: https://www.imdb.com/title/tt114272/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114272\n",
            "Request failed for movie with IMDb ID 113855: 404 Client Error:  for url: https://www.imdb.com/title/tt113855/reviews\n",
            "Request failed for movie with IMDb ID 113855: 404 Client Error:  for url: https://www.imdb.com/title/tt113855/reviews\n",
            "Request failed for movie with IMDb ID 113855: 404 Client Error:  for url: https://www.imdb.com/title/tt113855/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113855\n",
            "Request failed for movie with IMDb ID 114681: 404 Client Error:  for url: https://www.imdb.com/title/tt114681/reviews\n",
            "Request failed for movie with IMDb ID 114681: 404 Client Error:  for url: https://www.imdb.com/title/tt114681/reviews\n",
            "Request failed for movie with IMDb ID 114681: 404 Client Error:  for url: https://www.imdb.com/title/tt114681/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114681\n",
            "Request failed for movie with IMDb ID 113347: 404 Client Error:  for url: https://www.imdb.com/title/tt113347/reviews\n",
            "Request failed for movie with IMDb ID 113347: 404 Client Error:  for url: https://www.imdb.com/title/tt113347/reviews\n",
            "Request failed for movie with IMDb ID 113347: 404 Client Error:  for url: https://www.imdb.com/title/tt113347/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113347\n",
            "Request failed for movie with IMDb ID 114369: 404 Client Error:  for url: https://www.imdb.com/title/tt114369/reviews\n",
            "Request failed for movie with IMDb ID 114369: 404 Client Error:  for url: https://www.imdb.com/title/tt114369/reviews\n",
            "Request failed for movie with IMDb ID 114369: 404 Client Error:  for url: https://www.imdb.com/title/tt114369/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114369\n",
            "Request failed for movie with IMDb ID 114148: 404 Client Error:  for url: https://www.imdb.com/title/tt114148/reviews\n",
            "Request failed for movie with IMDb ID 114148: 404 Client Error:  for url: https://www.imdb.com/title/tt114148/reviews\n",
            "Request failed for movie with IMDb ID 114148: 404 Client Error:  for url: https://www.imdb.com/title/tt114148/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114148\n",
            "Request failed for movie with IMDb ID 114916: 404 Client Error:  for url: https://www.imdb.com/title/tt114916/reviews\n",
            "Request failed for movie with IMDb ID 114916: 404 Client Error:  for url: https://www.imdb.com/title/tt114916/reviews\n",
            "Request failed for movie with IMDb ID 114916: 404 Client Error:  for url: https://www.imdb.com/title/tt114916/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114916\n",
            "Request failed for movie with IMDb ID 114814: 404 Client Error:  for url: https://www.imdb.com/title/tt114814/reviews\n",
            "Request failed for movie with IMDb ID 114814: 404 Client Error:  for url: https://www.imdb.com/title/tt114814/reviews\n",
            "Request failed for movie with IMDb ID 114814: 404 Client Error:  for url: https://www.imdb.com/title/tt114814/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114814\n",
            "Request failed for movie with IMDb ID 113819: 404 Client Error:  for url: https://www.imdb.com/title/tt113819/reviews\n",
            "Request failed for movie with IMDb ID 113819: 404 Client Error:  for url: https://www.imdb.com/title/tt113819/reviews\n",
            "Request failed for movie with IMDb ID 113819: 404 Client Error:  for url: https://www.imdb.com/title/tt113819/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113819\n",
            "Request failed for movie with IMDb ID 110299: 404 Client Error:  for url: https://www.imdb.com/title/tt110299/reviews\n",
            "Request failed for movie with IMDb ID 110299: 404 Client Error:  for url: https://www.imdb.com/title/tt110299/reviews\n",
            "Request failed for movie with IMDb ID 110299: 404 Client Error:  for url: https://www.imdb.com/title/tt110299/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 110299\n",
            "Request failed for movie with IMDb ID 112499: 404 Client Error:  for url: https://www.imdb.com/title/tt112499/reviews\n",
            "Request failed for movie with IMDb ID 112499: 404 Client Error:  for url: https://www.imdb.com/title/tt112499/reviews\n",
            "Request failed for movie with IMDb ID 112499: 404 Client Error:  for url: https://www.imdb.com/title/tt112499/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112499\n",
            "Request failed for movie with IMDb ID 113158: 404 Client Error:  for url: https://www.imdb.com/title/tt113158/reviews\n",
            "Request failed for movie with IMDb ID 113158: 404 Client Error:  for url: https://www.imdb.com/title/tt113158/reviews\n",
            "Request failed for movie with IMDb ID 113158: 404 Client Error:  for url: https://www.imdb.com/title/tt113158/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113158\n",
            "Request failed for movie with IMDb ID 113321: 404 Client Error:  for url: https://www.imdb.com/title/tt113321/reviews\n",
            "Request failed for movie with IMDb ID 113321: 404 Client Error:  for url: https://www.imdb.com/title/tt113321/reviews\n",
            "Request failed for movie with IMDb ID 113321: 404 Client Error:  for url: https://www.imdb.com/title/tt113321/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113321\n",
            "Request failed for movie with IMDb ID 110877: 404 Client Error:  for url: https://www.imdb.com/title/tt110877/reviews\n",
            "Request failed for movie with IMDb ID 110877: 404 Client Error:  for url: https://www.imdb.com/title/tt110877/reviews\n",
            "Request failed for movie with IMDb ID 110877: 404 Client Error:  for url: https://www.imdb.com/title/tt110877/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 110877\n",
            "Request failed for movie with IMDb ID 113419: 404 Client Error:  for url: https://www.imdb.com/title/tt113419/reviews\n",
            "Request failed for movie with IMDb ID 113419: 404 Client Error:  for url: https://www.imdb.com/title/tt113419/reviews\n",
            "Request failed for movie with IMDb ID 113419: 404 Client Error:  for url: https://www.imdb.com/title/tt113419/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113419\n",
            "Request failed for movie with IMDb ID 116260: 404 Client Error:  for url: https://www.imdb.com/title/tt116260/reviews\n",
            "Request failed for movie with IMDb ID 116260: 404 Client Error:  for url: https://www.imdb.com/title/tt116260/reviews\n",
            "Request failed for movie with IMDb ID 116260: 404 Client Error:  for url: https://www.imdb.com/title/tt116260/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116260\n",
            "Request failed for movie with IMDb ID 113862: 404 Client Error:  for url: https://www.imdb.com/title/tt113862/reviews\n",
            "Request failed for movie with IMDb ID 113862: 404 Client Error:  for url: https://www.imdb.com/title/tt113862/reviews\n",
            "Request failed for movie with IMDb ID 113862: 404 Client Error:  for url: https://www.imdb.com/title/tt113862/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113862\n",
            "Request failed for movie with IMDb ID 116126: 404 Client Error:  for url: https://www.imdb.com/title/tt116126/reviews\n",
            "Request failed for movie with IMDb ID 116126: 404 Client Error:  for url: https://www.imdb.com/title/tt116126/reviews\n",
            "Request failed for movie with IMDb ID 116126: 404 Client Error:  for url: https://www.imdb.com/title/tt116126/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116126\n",
            "Request failed for movie with IMDb ID 118002: 404 Client Error:  for url: https://www.imdb.com/title/tt118002/reviews\n",
            "Request failed for movie with IMDb ID 118002: 404 Client Error:  for url: https://www.imdb.com/title/tt118002/reviews\n",
            "Request failed for movie with IMDb ID 118002: 404 Client Error:  for url: https://www.imdb.com/title/tt118002/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 118002\n",
            "Request failed for movie with IMDb ID 115683: 404 Client Error:  for url: https://www.imdb.com/title/tt115683/reviews\n",
            "Request failed for movie with IMDb ID 115683: 404 Client Error:  for url: https://www.imdb.com/title/tt115683/reviews\n",
            "Request failed for movie with IMDb ID 115683: 404 Client Error:  for url: https://www.imdb.com/title/tt115683/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115683\n",
            "Request failed for movie with IMDb ID 116839: 404 Client Error:  for url: https://www.imdb.com/title/tt116839/reviews\n",
            "Request failed for movie with IMDb ID 116839: 404 Client Error:  for url: https://www.imdb.com/title/tt116839/reviews\n",
            "Request failed for movie with IMDb ID 116839: 404 Client Error:  for url: https://www.imdb.com/title/tt116839/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116839\n",
            "Request failed for movie with IMDb ID 113149: 404 Client Error:  for url: https://www.imdb.com/title/tt113149/reviews\n",
            "Request failed for movie with IMDb ID 113149: 404 Client Error:  for url: https://www.imdb.com/title/tt113149/reviews\n",
            "Request failed for movie with IMDb ID 113149: 404 Client Error:  for url: https://www.imdb.com/title/tt113149/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113149\n",
            "Request failed for movie with IMDb ID 113118: 404 Client Error:  for url: https://www.imdb.com/title/tt113118/reviews\n",
            "Request failed for movie with IMDb ID 113118: 404 Client Error:  for url: https://www.imdb.com/title/tt113118/reviews\n",
            "Request failed for movie with IMDb ID 113118: 404 Client Error:  for url: https://www.imdb.com/title/tt113118/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113118\n",
            "Request failed for movie with IMDb ID 116367: 404 Client Error:  for url: https://www.imdb.com/title/tt116367/reviews\n",
            "Request failed for movie with IMDb ID 116367: 404 Client Error:  for url: https://www.imdb.com/title/tt116367/reviews\n",
            "Request failed for movie with IMDb ID 116367: 404 Client Error:  for url: https://www.imdb.com/title/tt116367/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116367\n",
            "Request failed for movie with IMDb ID 113010: 404 Client Error:  for url: https://www.imdb.com/title/tt113010/reviews\n",
            "Request failed for movie with IMDb ID 113010: 404 Client Error:  for url: https://www.imdb.com/title/tt113010/reviews\n",
            "Request failed for movie with IMDb ID 113010: 404 Client Error:  for url: https://www.imdb.com/title/tt113010/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113010\n",
            "Request failed for movie with IMDb ID 113537: 404 Client Error:  for url: https://www.imdb.com/title/tt113537/reviews\n",
            "Request failed for movie with IMDb ID 113537: 404 Client Error:  for url: https://www.imdb.com/title/tt113537/reviews\n",
            "Request failed for movie with IMDb ID 113537: 404 Client Error:  for url: https://www.imdb.com/title/tt113537/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113537\n",
            "Request failed for movie with IMDb ID 113828: 404 Client Error:  for url: https://www.imdb.com/title/tt113828/reviews\n",
            "Request failed for movie with IMDb ID 113828: 404 Client Error:  for url: https://www.imdb.com/title/tt113828/reviews\n",
            "Request failed for movie with IMDb ID 113828: 404 Client Error:  for url: https://www.imdb.com/title/tt113828/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113828\n",
            "Request failed for movie with IMDb ID 115644: 404 Client Error:  for url: https://www.imdb.com/title/tt115644/reviews\n",
            "Request failed for movie with IMDb ID 115644: 404 Client Error:  for url: https://www.imdb.com/title/tt115644/reviews\n",
            "Request failed for movie with IMDb ID 115644: 404 Client Error:  for url: https://www.imdb.com/title/tt115644/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115644\n",
            "Request failed for movie with IMDb ID 115676: 404 Client Error:  for url: https://www.imdb.com/title/tt115676/reviews\n",
            "Request failed for movie with IMDb ID 115676: 404 Client Error:  for url: https://www.imdb.com/title/tt115676/reviews\n",
            "Request failed for movie with IMDb ID 115676: 404 Client Error:  for url: https://www.imdb.com/title/tt115676/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115676\n",
            "Request failed for movie with IMDb ID 114367: 404 Client Error:  for url: https://www.imdb.com/title/tt114367/reviews\n",
            "Request failed for movie with IMDb ID 114367: 404 Client Error:  for url: https://www.imdb.com/title/tt114367/reviews\n",
            "Request failed for movie with IMDb ID 114367: 404 Client Error:  for url: https://www.imdb.com/title/tt114367/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114367\n",
            "Request failed for movie with IMDb ID 113973: 404 Client Error:  for url: https://www.imdb.com/title/tt113973/reviews\n",
            "Request failed for movie with IMDb ID 113973: 404 Client Error:  for url: https://www.imdb.com/title/tt113973/reviews\n",
            "Request failed for movie with IMDb ID 113973: 404 Client Error:  for url: https://www.imdb.com/title/tt113973/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113973\n",
            "Request failed for movie with IMDb ID 112744: 404 Client Error:  for url: https://www.imdb.com/title/tt112744/reviews\n",
            "Request failed for movie with IMDb ID 112744: 404 Client Error:  for url: https://www.imdb.com/title/tt112744/reviews\n",
            "Request failed for movie with IMDb ID 112744: 404 Client Error:  for url: https://www.imdb.com/title/tt112744/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112744\n",
            "Request failed for movie with IMDb ID 116731: 404 Client Error:  for url: https://www.imdb.com/title/tt116731/reviews\n",
            "Request failed for movie with IMDb ID 116731: 404 Client Error:  for url: https://www.imdb.com/title/tt116731/reviews\n",
            "Request failed for movie with IMDb ID 116731: 404 Client Error:  for url: https://www.imdb.com/title/tt116731/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116731\n",
            "Request failed for movie with IMDb ID 112445: 404 Client Error:  for url: https://www.imdb.com/title/tt112445/reviews\n",
            "Request failed for movie with IMDb ID 112445: 404 Client Error:  for url: https://www.imdb.com/title/tt112445/reviews\n",
            "Request failed for movie with IMDb ID 112445: 404 Client Error:  for url: https://www.imdb.com/title/tt112445/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112445\n",
            "Request failed for movie with IMDb ID 114660: 404 Client Error:  for url: https://www.imdb.com/title/tt114660/reviews\n",
            "Request failed for movie with IMDb ID 114660: 404 Client Error:  for url: https://www.imdb.com/title/tt114660/reviews\n",
            "Request failed for movie with IMDb ID 114660: 404 Client Error:  for url: https://www.imdb.com/title/tt114660/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114660\n",
            "Request failed for movie with IMDb ID 112379: 404 Client Error:  for url: https://www.imdb.com/title/tt112379/reviews\n",
            "Request failed for movie with IMDb ID 112379: 404 Client Error:  for url: https://www.imdb.com/title/tt112379/reviews\n",
            "Request failed for movie with IMDb ID 112379: 404 Client Error:  for url: https://www.imdb.com/title/tt112379/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112379\n",
            "Request failed for movie with IMDb ID 114039: 404 Client Error:  for url: https://www.imdb.com/title/tt114039/reviews\n",
            "Request failed for movie with IMDb ID 114039: 404 Client Error:  for url: https://www.imdb.com/title/tt114039/reviews\n",
            "Request failed for movie with IMDb ID 114039: 404 Client Error:  for url: https://www.imdb.com/title/tt114039/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114039\n",
            "Request failed for movie with IMDb ID 112365: 404 Client Error:  for url: https://www.imdb.com/title/tt112365/reviews\n",
            "Request failed for movie with IMDb ID 112365: 404 Client Error:  for url: https://www.imdb.com/title/tt112365/reviews\n",
            "Request failed for movie with IMDb ID 112365: 404 Client Error:  for url: https://www.imdb.com/title/tt112365/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112365\n",
            "Request failed for movie with IMDb ID 118158: 404 Client Error:  for url: https://www.imdb.com/title/tt118158/reviews\n",
            "Request failed for movie with IMDb ID 118158: 404 Client Error:  for url: https://www.imdb.com/title/tt118158/reviews\n",
            "Request failed for movie with IMDb ID 118158: 404 Client Error:  for url: https://www.imdb.com/title/tt118158/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 118158\n",
            "Request failed for movie with IMDb ID 116151: 404 Client Error:  for url: https://www.imdb.com/title/tt116151/reviews\n",
            "Request failed for movie with IMDb ID 116151: 404 Client Error:  for url: https://www.imdb.com/title/tt116151/reviews\n",
            "Request failed for movie with IMDb ID 116151: 404 Client Error:  for url: https://www.imdb.com/title/tt116151/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116151\n",
            "Request failed for movie with IMDb ID 115697: 404 Client Error:  for url: https://www.imdb.com/title/tt115697/reviews\n",
            "Request failed for movie with IMDb ID 115697: 404 Client Error:  for url: https://www.imdb.com/title/tt115697/reviews\n",
            "Request failed for movie with IMDb ID 115697: 404 Client Error:  for url: https://www.imdb.com/title/tt115697/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115697\n",
            "Request failed for movie with IMDb ID 113972: 404 Client Error:  for url: https://www.imdb.com/title/tt113972/reviews\n",
            "Request failed for movie with IMDb ID 113972: 404 Client Error:  for url: https://www.imdb.com/title/tt113972/reviews\n",
            "Request failed for movie with IMDb ID 113972: 404 Client Error:  for url: https://www.imdb.com/title/tt113972/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113972\n",
            "Request failed for movie with IMDb ID 117002: 404 Client Error:  for url: https://www.imdb.com/title/tt117002/reviews\n",
            "Request failed for movie with IMDb ID 117002: 404 Client Error:  for url: https://www.imdb.com/title/tt117002/reviews\n",
            "Request failed for movie with IMDb ID 117002: 404 Client Error:  for url: https://www.imdb.com/title/tt117002/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 117002\n",
            "Request failed for movie with IMDb ID 114825: 404 Client Error:  for url: https://www.imdb.com/title/tt114825/reviews\n",
            "Request failed for movie with IMDb ID 114825: 404 Client Error:  for url: https://www.imdb.com/title/tt114825/reviews\n",
            "Request failed for movie with IMDb ID 114825: 404 Client Error:  for url: https://www.imdb.com/title/tt114825/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114825\n",
            "Request failed for movie with IMDb ID 115639: 404 Client Error:  for url: https://www.imdb.com/title/tt115639/reviews\n",
            "Request failed for movie with IMDb ID 115639: 404 Client Error:  for url: https://www.imdb.com/title/tt115639/reviews\n",
            "Request failed for movie with IMDb ID 115639: 404 Client Error:  for url: https://www.imdb.com/title/tt115639/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115639\n",
            "Request failed for movie with IMDb ID 115759: 404 Client Error:  for url: https://www.imdb.com/title/tt115759/reviews\n",
            "Request failed for movie with IMDb ID 115759: 404 Client Error:  for url: https://www.imdb.com/title/tt115759/reviews\n",
            "Request failed for movie with IMDb ID 115759: 404 Client Error:  for url: https://www.imdb.com/title/tt115759/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115759\n",
            "Request failed for movie with IMDb ID 113403: 404 Client Error:  for url: https://www.imdb.com/title/tt113403/reviews\n",
            "Request failed for movie with IMDb ID 113403: 404 Client Error:  for url: https://www.imdb.com/title/tt113403/reviews\n",
            "Request failed for movie with IMDb ID 113403: 404 Client Error:  for url: https://www.imdb.com/title/tt113403/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113403\n",
            "Request failed for movie with IMDb ID 113247: 404 Client Error:  for url: https://www.imdb.com/title/tt113247/reviews\n",
            "Request failed for movie with IMDb ID 113247: 404 Client Error:  for url: https://www.imdb.com/title/tt113247/reviews\n",
            "Request failed for movie with IMDb ID 113247: 404 Client Error:  for url: https://www.imdb.com/title/tt113247/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113247\n",
            "Request failed for movie with IMDb ID 113283: 404 Client Error:  for url: https://www.imdb.com/title/tt113283/reviews\n",
            "Request failed for movie with IMDb ID 113283: 404 Client Error:  for url: https://www.imdb.com/title/tt113283/reviews\n",
            "Request failed for movie with IMDb ID 113283: 404 Client Error:  for url: https://www.imdb.com/title/tt113283/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113283\n",
            "Request failed for movie with IMDb ID 115907: 404 Client Error:  for url: https://www.imdb.com/title/tt115907/reviews\n",
            "Request failed for movie with IMDb ID 115907: 404 Client Error:  for url: https://www.imdb.com/title/tt115907/reviews\n",
            "Request failed for movie with IMDb ID 115907: 404 Client Error:  for url: https://www.imdb.com/title/tt115907/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115907\n",
            "Request failed for movie with IMDb ID 115734: 404 Client Error:  for url: https://www.imdb.com/title/tt115734/reviews\n",
            "Request failed for movie with IMDb ID 115734: 404 Client Error:  for url: https://www.imdb.com/title/tt115734/reviews\n",
            "Request failed for movie with IMDb ID 115734: 404 Client Error:  for url: https://www.imdb.com/title/tt115734/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115734\n",
            "Request failed for movie with IMDb ID 117102: 404 Client Error:  for url: https://www.imdb.com/title/tt117102/reviews\n",
            "Request failed for movie with IMDb ID 117102: 404 Client Error:  for url: https://www.imdb.com/title/tt117102/reviews\n",
            "Request failed for movie with IMDb ID 117102: 404 Client Error:  for url: https://www.imdb.com/title/tt117102/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 117102\n",
            "Request failed for movie with IMDb ID 118040: 404 Client Error:  for url: https://www.imdb.com/title/tt118040/reviews\n",
            "Request failed for movie with IMDb ID 118040: 404 Client Error:  for url: https://www.imdb.com/title/tt118040/reviews\n",
            "Request failed for movie with IMDb ID 118040: 404 Client Error:  for url: https://www.imdb.com/title/tt118040/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 118040\n",
            "Request failed for movie with IMDb ID 116483: 404 Client Error:  for url: https://www.imdb.com/title/tt116483/reviews\n",
            "Request failed for movie with IMDb ID 116483: 404 Client Error:  for url: https://www.imdb.com/title/tt116483/reviews\n",
            "Request failed for movie with IMDb ID 116483: 404 Client Error:  for url: https://www.imdb.com/title/tt116483/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116483\n",
            "Request failed for movie with IMDb ID 112579: 404 Client Error:  for url: https://www.imdb.com/title/tt112579/reviews\n",
            "Request failed for movie with IMDb ID 112579: 404 Client Error:  for url: https://www.imdb.com/title/tt112579/reviews\n",
            "Request failed for movie with IMDb ID 112579: 404 Client Error:  for url: https://www.imdb.com/title/tt112579/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112579\n",
            "Request failed for movie with IMDb ID 110251: 404 Client Error:  for url: https://www.imdb.com/title/tt110251/reviews\n",
            "Request failed for movie with IMDb ID 110251: 404 Client Error:  for url: https://www.imdb.com/title/tt110251/reviews\n",
            "Request failed for movie with IMDb ID 110251: 404 Client Error:  for url: https://www.imdb.com/title/tt110251/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 110251\n",
            "Request failed for movie with IMDb ID 117110: 404 Client Error:  for url: https://www.imdb.com/title/tt117110/reviews\n",
            "Request failed for movie with IMDb ID 117110: 404 Client Error:  for url: https://www.imdb.com/title/tt117110/reviews\n",
            "Request failed for movie with IMDb ID 117110: 404 Client Error:  for url: https://www.imdb.com/title/tt117110/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 117110\n",
            "Request failed for movie with IMDb ID 112646: 404 Client Error:  for url: https://www.imdb.com/title/tt112646/reviews\n",
            "Request failed for movie with IMDb ID 112646: 404 Client Error:  for url: https://www.imdb.com/title/tt112646/reviews\n",
            "Request failed for movie with IMDb ID 112646: 404 Client Error:  for url: https://www.imdb.com/title/tt112646/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112646\n",
            "Request failed for movie with IMDb ID 112573: 404 Client Error:  for url: https://www.imdb.com/title/tt112573/reviews\n",
            "Request failed for movie with IMDb ID 112573: 404 Client Error:  for url: https://www.imdb.com/title/tt112573/reviews\n",
            "Request failed for movie with IMDb ID 112573: 404 Client Error:  for url: https://www.imdb.com/title/tt112573/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112573\n",
            "Request failed for movie with IMDb ID 75314: 404 Client Error:  for url: https://www.imdb.com/title/tt75314/reviews\n",
            "Request failed for movie with IMDb ID 75314: 404 Client Error:  for url: https://www.imdb.com/title/tt75314/reviews\n",
            "Request failed for movie with IMDb ID 75314: 404 Client Error:  for url: https://www.imdb.com/title/tt75314/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 75314\n",
            "Request failed for movie with IMDb ID 113326: 404 Client Error:  for url: https://www.imdb.com/title/tt113326/reviews\n",
            "Request failed for movie with IMDb ID 113326: 404 Client Error:  for url: https://www.imdb.com/title/tt113326/reviews\n",
            "Request failed for movie with IMDb ID 113326: 404 Client Error:  for url: https://www.imdb.com/title/tt113326/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113326\n",
            "Request failed for movie with IMDb ID 115645: 404 Client Error:  for url: https://www.imdb.com/title/tt115645/reviews\n",
            "Request failed for movie with IMDb ID 115645: 404 Client Error:  for url: https://www.imdb.com/title/tt115645/reviews\n",
            "Request failed for movie with IMDb ID 115645: 404 Client Error:  for url: https://www.imdb.com/title/tt115645/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115645\n",
            "Request failed for movie with IMDb ID 112373: 404 Client Error:  for url: https://www.imdb.com/title/tt112373/reviews\n",
            "Request failed for movie with IMDb ID 112373: 404 Client Error:  for url: https://www.imdb.com/title/tt112373/reviews\n",
            "Request failed for movie with IMDb ID 112373: 404 Client Error:  for url: https://www.imdb.com/title/tt112373/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 112373\n",
            "Request failed for movie with IMDb ID 115033: 404 Client Error:  for url: https://www.imdb.com/title/tt115033/reviews\n",
            "Request failed for movie with IMDb ID 115033: 404 Client Error:  for url: https://www.imdb.com/title/tt115033/reviews\n",
            "Request failed for movie with IMDb ID 115033: 404 Client Error:  for url: https://www.imdb.com/title/tt115033/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 115033\n",
            "Request failed for movie with IMDb ID 116606: 404 Client Error:  for url: https://www.imdb.com/title/tt116606/reviews\n",
            "Request failed for movie with IMDb ID 116606: 404 Client Error:  for url: https://www.imdb.com/title/tt116606/reviews\n",
            "Request failed for movie with IMDb ID 116606: 404 Client Error:  for url: https://www.imdb.com/title/tt116606/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116606\n",
            "Request failed for movie with IMDb ID 114536: 404 Client Error:  for url: https://www.imdb.com/title/tt114536/reviews\n",
            "Request failed for movie with IMDb ID 114536: 404 Client Error:  for url: https://www.imdb.com/title/tt114536/reviews\n",
            "Request failed for movie with IMDb ID 114536: 404 Client Error:  for url: https://www.imdb.com/title/tt114536/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114536\n",
            "Request failed for movie with IMDb ID 106473: 404 Client Error:  for url: https://www.imdb.com/title/tt106473/reviews\n",
            "Request failed for movie with IMDb ID 106473: 404 Client Error:  for url: https://www.imdb.com/title/tt106473/reviews\n",
            "Request failed for movie with IMDb ID 106473: 404 Client Error:  for url: https://www.imdb.com/title/tt106473/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 106473\n",
            "Request failed for movie with IMDb ID 103859: 404 Client Error:  for url: https://www.imdb.com/title/tt103859/reviews\n",
            "Request failed for movie with IMDb ID 103859: 404 Client Error:  for url: https://www.imdb.com/title/tt103859/reviews\n",
            "Request failed for movie with IMDb ID 103859: 404 Client Error:  for url: https://www.imdb.com/title/tt103859/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 103859\n",
            "Request failed for movie with IMDb ID 109424: 404 Client Error:  for url: https://www.imdb.com/title/tt109424/reviews\n",
            "Request failed for movie with IMDb ID 109424: 404 Client Error:  for url: https://www.imdb.com/title/tt109424/reviews\n",
            "Request failed for movie with IMDb ID 109424: 404 Client Error:  for url: https://www.imdb.com/title/tt109424/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 109424\n",
            "Request failed for movie with IMDb ID 116324: 404 Client Error:  for url: https://www.imdb.com/title/tt116324/reviews\n",
            "Request failed for movie with IMDb ID 116324: 404 Client Error:  for url: https://www.imdb.com/title/tt116324/reviews\n",
            "Request failed for movie with IMDb ID 116324: 404 Client Error:  for url: https://www.imdb.com/title/tt116324/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116324\n",
            "Request failed for movie with IMDb ID 110647: 404 Client Error:  for url: https://www.imdb.com/title/tt110647/reviews\n",
            "Request failed for movie with IMDb ID 110647: 404 Client Error:  for url: https://www.imdb.com/title/tt110647/reviews\n",
            "Request failed for movie with IMDb ID 110647: 404 Client Error:  for url: https://www.imdb.com/title/tt110647/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 110647\n",
            "Request failed for movie with IMDb ID 110217: 404 Client Error:  for url: https://www.imdb.com/title/tt110217/reviews\n",
            "Request failed for movie with IMDb ID 110217: 404 Client Error:  for url: https://www.imdb.com/title/tt110217/reviews\n",
            "Request failed for movie with IMDb ID 110217: 404 Client Error:  for url: https://www.imdb.com/title/tt110217/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 110217\n",
            "Request failed for movie with IMDb ID 114131: 404 Client Error:  for url: https://www.imdb.com/title/tt114131/reviews\n",
            "Request failed for movie with IMDb ID 114131: 404 Client Error:  for url: https://www.imdb.com/title/tt114131/reviews\n",
            "Request failed for movie with IMDb ID 114131: 404 Client Error:  for url: https://www.imdb.com/title/tt114131/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 114131\n",
            "Request failed for movie with IMDb ID 113451: 404 Client Error:  for url: https://www.imdb.com/title/tt113451/reviews\n",
            "Request failed for movie with IMDb ID 113451: 404 Client Error:  for url: https://www.imdb.com/title/tt113451/reviews\n",
            "Request failed for movie with IMDb ID 113451: 404 Client Error:  for url: https://www.imdb.com/title/tt113451/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113451\n",
            "Request failed for movie with IMDb ID 116130: 404 Client Error:  for url: https://www.imdb.com/title/tt116130/reviews\n",
            "Request failed for movie with IMDb ID 116130: 404 Client Error:  for url: https://www.imdb.com/title/tt116130/reviews\n",
            "Request failed for movie with IMDb ID 116130: 404 Client Error:  for url: https://www.imdb.com/title/tt116130/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 116130\n",
            "Request failed for movie with IMDb ID 113756: 404 Client Error:  for url: https://www.imdb.com/title/tt113756/reviews\n",
            "Request failed for movie with IMDb ID 113756: 404 Client Error:  for url: https://www.imdb.com/title/tt113756/reviews\n",
            "Request failed for movie with IMDb ID 113756: 404 Client Error:  for url: https://www.imdb.com/title/tt113756/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 113756\n",
            "Request failed for movie with IMDb ID 118055: 404 Client Error:  for url: https://www.imdb.com/title/tt118055/reviews\n",
            "Request failed for movie with IMDb ID 118055: 404 Client Error:  for url: https://www.imdb.com/title/tt118055/reviews\n",
            "Request failed for movie with IMDb ID 118055: 404 Client Error:  for url: https://www.imdb.com/title/tt118055/reviews\n",
            "Failed to retrieve reviews for movie with IMDb ID 118055\n",
            "Request failed for movie with IMDb ID 115685: 404 Client Error:  for url: https://www.imdb.com/title/tt115685/reviews\n",
            "Request failed for movie with IMDb ID 115685: 404 Client Error:  for url: https://www.imdb.com/title/tt115685/reviews\n",
            "Request failed for movie with IMDb ID 115685: 404 Client Error:  for url: https://www.imdb.com/title/tt115685/reviews\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mHTTPError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-62-fcc81ee3a266>\u001b[0m in \u001b[0;36mscrape_imdb_reviews\u001b[0;34m(imdb_id)\u001b[0m\n\u001b[1;32m     25\u001b[0m             \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrequests\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheaders\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mheaders\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 26\u001b[0;31m             \u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mraise_for_status\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Raise an exception for bad responses\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     27\u001b[0m             \u001b[0;32mbreak\u001b[0m  \u001b[0;31m# If successful, break out of the loop\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/requests/models.py\u001b[0m in \u001b[0;36mraise_for_status\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1020\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mhttp_error_msg\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1021\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mHTTPError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhttp_error_msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1022\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mHTTPError\u001b[0m: 404 Client Error:  for url: https://www.imdb.com/title/tt115685/reviews",
            "\nDuring handling of the above exception, another exception occurred:\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-62-fcc81ee3a266>\u001b[0m in \u001b[0;36m<cell line: 47>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     46\u001b[0m \u001b[0;31m# Iterate through the IMDb IDs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     47\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mimdb_id\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlinks_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'imdbId'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 48\u001b[0;31m     \u001b[0mscrape_imdb_reviews\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimdb_id\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     49\u001b[0m     \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Introduce a delay\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-62-fcc81ee3a266>\u001b[0m in \u001b[0;36mscrape_imdb_reviews\u001b[0;34m(imdb_id)\u001b[0m\n\u001b[1;32m     28\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mrequests\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexceptions\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mRequestException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m             \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Request failed for movie with IMDb ID {imdb_id}: {e}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 30\u001b[0;31m             \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Wait for a while before retrying\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     31\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "from bs4 import BeautifulSoup\n",
        "import pandas as pd\n",
        "import time\n",
        "\n",
        "# Load IMDb IDs from links.csv\n",
        "links_df = pd.read_csv('links.csv')\n",
        "\n",
        "# Example IMDb URL: 'https://www.imdb.com/title/tt0111161/'\n",
        "base_url = 'https://www.imdb.com/title/tt'\n",
        "\n",
        "# Create a function to scrape IMDb reviews and get IMDb rating\n",
        "def scrape_imdb_data(imdb_id):\n",
        "    url = f'{base_url}{imdb_id}/'\n",
        "\n",
        "    # Use a fake user agent to rotate and avoid being blocked\n",
        "    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'}\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url, headers=headers, timeout=10)\n",
        "        response.raise_for_status()  # Raise an exception for bad responses\n",
        "    except requests.exceptions.RequestException as e:\n",
        "        print(f\"Request failed for movie with IMDb ID {imdb_id}: {e}\")\n",
        "        return None, None\n",
        "\n",
        "    if response.status_code == 200:\n",
        "        soup = BeautifulSoup(response.content, 'html.parser')\n",
        "\n",
        "        # Extract IMDb rating\n",
        "        rating_tag = soup.find('span', itemprop='ratingValue')\n",
        "        imdb_rating = float(rating_tag.text) if rating_tag else None\n",
        "\n",
        "        return soup, imdb_rating\n",
        "    else:\n",
        "        print(f\"Failed to retrieve data for movie with IMDb ID {imdb_id}\")\n",
        "        return None, None\n",
        "\n",
        "# Iterate through the IMDb IDs\n",
        "highest_rating = 0\n",
        "highest_rating_movie_id = None\n",
        "\n",
        "for imdb_id in links_df['imdbId']:\n",
        "    _, imdb_rating = scrape_imdb_data(imdb_id)\n",
        "\n",
        "    if imdb_rating is not None and imdb_rating > highest_rating:\n",
        "        highest_rating = imdb_rating\n",
        "        highest_rating_movie_id = imdb_id\n",
        "\n",
        "    time.sleep(5)  # Introduce a delay between requests to avoid being blocked\n",
        "\n",
        "# Display the result\n",
        "print(\"Sci-Fi movie with the highest IMDb rating:\")\n",
        "print(f\"Movie ID: {highest_rating_movie_id}, IMDb Rating: {highest_rating}\")"
      ],
      "metadata": {
        "id": "EuF0dK49J2Ew"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "LQKj1xnPCy0-",
        "outputId": "90131391-7d12-460a-edeb-c0c6120dc2a3"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      movieId   imdbId    tmdbId\n",
              "0           1   114709     862.0\n",
              "1           2   113497    8844.0\n",
              "2           3   113228   15602.0\n",
              "3           4   114885   31357.0\n",
              "4           5   113041   11862.0\n",
              "...       ...      ...       ...\n",
              "9737   193581  5476944  432131.0\n",
              "9738   193583  5914996  445030.0\n",
              "9739   193585  6397426  479308.0\n",
              "9740   193587  8391976  483455.0\n",
              "9741   193609   101726   37891.0\n",
              "\n",
              "[9742 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5df91db5-c28e-4d45-a534-18f153bbd2aa\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>movieId</th>\n",
              "      <th>imdbId</th>\n",
              "      <th>tmdbId</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>114709</td>\n",
              "      <td>862.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>113497</td>\n",
              "      <td>8844.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>113228</td>\n",
              "      <td>15602.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>114885</td>\n",
              "      <td>31357.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>113041</td>\n",
              "      <td>11862.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9737</th>\n",
              "      <td>193581</td>\n",
              "      <td>5476944</td>\n",
              "      <td>432131.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9738</th>\n",
              "      <td>193583</td>\n",
              "      <td>5914996</td>\n",
              "      <td>445030.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9739</th>\n",
              "      <td>193585</td>\n",
              "      <td>6397426</td>\n",
              "      <td>479308.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9740</th>\n",
              "      <td>193587</td>\n",
              "      <td>8391976</td>\n",
              "      <td>483455.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9741</th>\n",
              "      <td>193609</td>\n",
              "      <td>101726</td>\n",
              "      <td>37891.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9742 rows Ã— 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5df91db5-c28e-4d45-a534-18f153bbd2aa')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5df91db5-c28e-4d45-a534-18f153bbd2aa button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5df91db5-c28e-4d45-a534-18f153bbd2aa');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b35aa26b-59a0-482a-a294-c4f2267a9489\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b35aa26b-59a0-482a-a294-c4f2267a9489')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b35aa26b-59a0-482a-a294-c4f2267a9489 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_38eca239-eb1d-41c0-b505-82673f45ed45\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df1')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_38eca239-eb1d-41c0-b505-82673f45ed45 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df1');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matrix_tags=merge_df1[merge_df1['title']==\"Matrix, The (1999)\"]['tag']"
      ],
      "metadata": {
        "id": "yEymFLvTvGvZ"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "matrix_tags.unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dvlBu22zw-Hx",
        "outputId": "6fc305cb-df9e-48b2-a025-e9696273f6dd"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Al Pacino', 'gangster', 'mafia', ..., 'gun fu',\n",
              "       'heroic bloodshed', 'Heroic Bloodshed'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pd.DataFrame(matrix_tags)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "Fm5a7_savGtN",
        "outputId": "e3bf7888-65f8-4732-cc54-47212e0951b9"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      tag\n",
              "577             Al Pacino\n",
              "1079             gangster\n",
              "1581                mafia\n",
              "2083            Al Pacino\n",
              "2585                Mafia\n",
              "...                   ...\n",
              "4621157         for katie\n",
              "4622272           austere\n",
              "4623110            gun fu\n",
              "4624412  heroic bloodshed\n",
              "4625714  Heroic Bloodshed\n",
              "\n",
              "[3107 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3d194cf8-32f4-4781-ae2e-445b6ff0b4dd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tag</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>577</th>\n",
              "      <td>Al Pacino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1079</th>\n",
              "      <td>gangster</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1581</th>\n",
              "      <td>mafia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2083</th>\n",
              "      <td>Al Pacino</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2585</th>\n",
              "      <td>Mafia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4621157</th>\n",
              "      <td>for katie</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4622272</th>\n",
              "      <td>austere</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4623110</th>\n",
              "      <td>gun fu</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4624412</th>\n",
              "      <td>heroic bloodshed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4625714</th>\n",
              "      <td>Heroic Bloodshed</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3107 rows Ã— 1 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d194cf8-32f4-4781-ae2e-445b6ff0b4dd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3d194cf8-32f4-4781-ae2e-445b6ff0b4dd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3d194cf8-32f4-4781-ae2e-445b6ff0b4dd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5e414934-dc94-45f0-a898-5e3cb47e04bb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e414934-dc94-45f0-a898-5e3cb47e04bb')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5e414934-dc94-45f0-a898-5e3cb47e04bb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "t2_ratings=merge_df[merge_df['title']==\"Terminator 2: Judgment Day (1991)\"]"
      ],
      "metadata": {
        "id": "pCyDxitex-pc"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "avg_rate=t2_ratings['rating'].mean()"
      ],
      "metadata": {
        "id": "JTSUIdA0x-l6"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "avg_rate"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ERBZ5hOox-eh",
        "outputId": "7c504632-bcaa-4851-d179-874ec0d4ec41"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3.970982142857143"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fcd=merge_df[merge_df['title']==\"Fight Club (1999)\"]"
      ],
      "metadata": {
        "id": "kEScdRhrx-bR"
      },
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.hist(fcd['rating'],bins=10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "25W9aa7qzM1q",
        "outputId": "6b9349d5-6cf9-43a2-e263-6159b4a6e7b0"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 3.,  0.,  1.,  5.,  3., 10., 17., 49., 49., 81.]),\n",
              " array([0.5 , 0.95, 1.4 , 1.85, 2.3 , 2.75, 3.2 , 3.65, 4.1 , 4.55, 5.  ]),\n",
              " <BarContainer object of 10 artists>)"
            ]
          },
          "metadata": {},
          "execution_count": 50
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df3[df3['genres']=='Sci-Fi']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "6zQOolxMPld4",
        "outputId": "ecca5e23-a24a-4c23-fa74-5edcde40d5a2"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      movieId                                              title  genres\n",
              "1719     2311              2010: The Year We Make Contact (1984)  Sci-Fi\n",
              "1902     2526                                      Meteor (1979)  Sci-Fi\n",
              "2000     2661                    It Came from Outer Space (1953)  Sci-Fi\n",
              "2003     2665                Earth vs. the Flying Saucers (1956)  Sci-Fi\n",
              "2026     2698                                     Zone 39 (1997)  Sci-Fi\n",
              "2507     3354                             Mission to Mars (2000)  Sci-Fi\n",
              "3121     4198                     Battle Beyond the Stars (1980)  Sci-Fi\n",
              "3522     4813                         When Worlds Collide (1951)  Sci-Fi\n",
              "3600     4942                       Angry Red Planet, The (1959)  Sci-Fi\n",
              "3893     5468                   20 Million Miles to Earth (1957)  Sci-Fi\n",
              "4122     5919                                     Android (1982)  Sci-Fi\n",
              "4314     6302                        Beginning of the End (1957)  Sci-Fi\n",
              "4596     6836                Amazing Transparent Man, The (1960)  Sci-Fi\n",
              "4630     6899                             Alien from L.A. (1988)  Sci-Fi\n",
              "4844     7236                          Boy and His Dog, A (1975)  Sci-Fi\n",
              "5077     7986                                   Robot Jox (1990)  Sci-Fi\n",
              "5190     8447                           This Island Earth (1955)  Sci-Fi\n",
              "5456    26124                     Robinson Crusoe on Mars (1964)  Sci-Fi\n",
              "5614    27074                             Brave New World (1998)  Sci-Fi\n",
              "6059    40697                                          Babylon 5  Sci-Fi\n",
              "6430    51562                    Babylon 5: The Gathering (1993)  Sci-Fi\n",
              "6796    60674                         Stargate: Continuum (2008)  Sci-Fi\n",
              "6876    62834  Babylon 5: The Legend of the Rangers: To Live ...  Sci-Fi\n",
              "6877    62836  Babylon 5: The Lost Tales - Voices in the Dark...  Sci-Fi\n",
              "7328    77795                                       Cargo (2009)  Sci-Fi\n",
              "8211   103596                                   Sharknado (2013)  Sci-Fi\n",
              "8469   112623              Dawn of the Planet of the Apes (2014)  Sci-Fi\n",
              "8611   118290                                  Omega Doom (1996)  Sci-Fi\n",
              "8680   122627                        Oblivion 2: Backlash (1996)  Sci-Fi\n",
              "9117   145724                              Idaho Transfer (1973)  Sci-Fi\n",
              "9147   147376               Doctor Who: A Christmas Carol (2010)  Sci-Fi\n",
              "9151   147384               Doctor Who: The Runaway Bride (2007)  Sci-Fi\n",
              "9288   158388             Buck Rogers in the 25th Century (1979)  Sci-Fi\n",
              "9351   161044                                   Webmaster (1998)  Sci-Fi\n",
              "9392   164179                                     Arrival (2016)  Sci-Fi\n",
              "9481   169904                           Guyver: Dark Hero (1994)  Sci-Fi\n",
              "9604   176371                           Blade Runner 2049 (2017)  Sci-Fi"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-10cccc86-14f5-40e4-ba06-42992afd7d34\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>movieId</th>\n",
              "      <th>title</th>\n",
              "      <th>genres</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1719</th>\n",
              "      <td>2311</td>\n",
              "      <td>2010: The Year We Make Contact (1984)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1902</th>\n",
              "      <td>2526</td>\n",
              "      <td>Meteor (1979)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000</th>\n",
              "      <td>2661</td>\n",
              "      <td>It Came from Outer Space (1953)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2003</th>\n",
              "      <td>2665</td>\n",
              "      <td>Earth vs. the Flying Saucers (1956)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026</th>\n",
              "      <td>2698</td>\n",
              "      <td>Zone 39 (1997)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2507</th>\n",
              "      <td>3354</td>\n",
              "      <td>Mission to Mars (2000)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3121</th>\n",
              "      <td>4198</td>\n",
              "      <td>Battle Beyond the Stars (1980)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3522</th>\n",
              "      <td>4813</td>\n",
              "      <td>When Worlds Collide (1951)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3600</th>\n",
              "      <td>4942</td>\n",
              "      <td>Angry Red Planet, The (1959)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3893</th>\n",
              "      <td>5468</td>\n",
              "      <td>20 Million Miles to Earth (1957)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4122</th>\n",
              "      <td>5919</td>\n",
              "      <td>Android (1982)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4314</th>\n",
              "      <td>6302</td>\n",
              "      <td>Beginning of the End (1957)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4596</th>\n",
              "      <td>6836</td>\n",
              "      <td>Amazing Transparent Man, The (1960)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4630</th>\n",
              "      <td>6899</td>\n",
              "      <td>Alien from L.A. (1988)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4844</th>\n",
              "      <td>7236</td>\n",
              "      <td>Boy and His Dog, A (1975)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5077</th>\n",
              "      <td>7986</td>\n",
              "      <td>Robot Jox (1990)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5190</th>\n",
              "      <td>8447</td>\n",
              "      <td>This Island Earth (1955)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5456</th>\n",
              "      <td>26124</td>\n",
              "      <td>Robinson Crusoe on Mars (1964)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5614</th>\n",
              "      <td>27074</td>\n",
              "      <td>Brave New World (1998)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6059</th>\n",
              "      <td>40697</td>\n",
              "      <td>Babylon 5</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6430</th>\n",
              "      <td>51562</td>\n",
              "      <td>Babylon 5: The Gathering (1993)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6796</th>\n",
              "      <td>60674</td>\n",
              "      <td>Stargate: Continuum (2008)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6876</th>\n",
              "      <td>62834</td>\n",
              "      <td>Babylon 5: The Legend of the Rangers: To Live ...</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6877</th>\n",
              "      <td>62836</td>\n",
              "      <td>Babylon 5: The Lost Tales - Voices in the Dark...</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7328</th>\n",
              "      <td>77795</td>\n",
              "      <td>Cargo (2009)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8211</th>\n",
              "      <td>103596</td>\n",
              "      <td>Sharknado (2013)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8469</th>\n",
              "      <td>112623</td>\n",
              "      <td>Dawn of the Planet of the Apes (2014)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8611</th>\n",
              "      <td>118290</td>\n",
              "      <td>Omega Doom (1996)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8680</th>\n",
              "      <td>122627</td>\n",
              "      <td>Oblivion 2: Backlash (1996)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9117</th>\n",
              "      <td>145724</td>\n",
              "      <td>Idaho Transfer (1973)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9147</th>\n",
              "      <td>147376</td>\n",
              "      <td>Doctor Who: A Christmas Carol (2010)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9151</th>\n",
              "      <td>147384</td>\n",
              "      <td>Doctor Who: The Runaway Bride (2007)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9288</th>\n",
              "      <td>158388</td>\n",
              "      <td>Buck Rogers in the 25th Century (1979)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9351</th>\n",
              "      <td>161044</td>\n",
              "      <td>Webmaster (1998)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9392</th>\n",
              "      <td>164179</td>\n",
              "      <td>Arrival (2016)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9481</th>\n",
              "      <td>169904</td>\n",
              "      <td>Guyver: Dark Hero (1994)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9604</th>\n",
              "      <td>176371</td>\n",
              "      <td>Blade Runner 2049 (2017)</td>\n",
              "      <td>Sci-Fi</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10cccc86-14f5-40e4-ba06-42992afd7d34')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-10cccc86-14f5-40e4-ba06-42992afd7d34 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-10cccc86-14f5-40e4-ba06-42992afd7d34');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c1772ccb-5bd9-4c41-b446-001de1acae5e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1772ccb-5bd9-4c41-b446-001de1acae5e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c1772ccb-5bd9-4c41-b446-001de1acae5e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    }
  ]
}